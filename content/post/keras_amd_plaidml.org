#+TITLE: keras on amd with plaidml
#+SUBTITLE: setup for amd gpu acceleration for keras
#+AUTHOR: xdrie
#+DATE: 2020-09-05
#+TAGS[]: dev
#+TOC: true

* intro
this week i wanted to revisit one of my old machine learning projects.
that project used the excellent [[https://keras.io/][keras]] library for building the model.

keras by default is configured to use the [[https://www.tensorflow.org/][tensorflow]] backend. tensorflow currently is heavily dependent on nvidia cuda for gpu acceleration.

however, my workstation has an amd gpu, specifically the *[[https://www.techpowerup.com/gpu-specs/radeon-rx-580.c2938][rx 580]]*. if i were to use keras with the default tensorflow backend,
performance would be very poor because all the heavy calculation would be running on my cpu.

* options for acceleration
** rocm
[[https://github.com/RadeonOpenCompute/ROCm][amd rocm]] looks promising and [[but apparently doesn't support ][apparently]] supports my gpu; however i spent some time trying to install it and was not able to.
some of the aur packages failed to build.

** plaidml
[[https://github.com/plaidml/plaidml][plaidml]] describes itself as "a framework for making deep learning work everywhere."
from what i can gather, it is a tensor compiler that supports a wide range of devices through opencl.

though it isn't officially supported by keras, plaidml also provides a [[https://github.com/plaidml/plaidml#quick-start][keras backend]].

* setting up plaidml
plaidml setup was surprisingly easy on my machine.

first, i installed the packages:
#+begin_src sh
pip install plaidml-keras plaidbench
#+end_src

then, i ran ~plaidml-setup~ to configure plaidml, and set my gpu as my default device

finally, i tested it on a simple workload by running mobilenet:
#+begin_src sh
plaidbench keras mobilenet
#+end_src

this seemed to work well on my machine.
when i ran my keras project, it appeared to be using the gpu. great!

* tldr
use ~plaidml-keras~.
